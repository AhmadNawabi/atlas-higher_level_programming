The ``add_ integer`` module
======================

using ``add_integer``

----------------------

Importing the module
    >>> add_integer = __import__("0-add_integer").add_integer

Checking module Docstring
    >>> c = __import__("0-add_integer").__doc__
    >>> len(c) > 1
    True


Check Regular addition
    >>> add_integer(1, 5)
    6

Check negative number
    >>> add_integer(2, -1)
    1

Testing The default Variable b= 98
    >>> add_integer(4)
    102

Testing Empty args Raise Error
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

Testing A float Return int
    >>> add_integer(6.5, -3)
    3

Testing  not int variable for b
    >>> add_integer(2, "Hello")
    Traceback (most recent call last):
    ...
        ...
    TypeError: b must be an integer

Testing  not int variable for a
    >>> add_integer("Hello", 2)
    Traceback (most recent call last):
    ...
        ...
    TypeError: a must be an integer

Testing with more than 2 args
    >>> add_integer(1, 2, 3)
    Traceback (most recent call last):
       ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

Testing float  overflow
    >>> add_integer(2, float("inf"))
    Traceback (most recent call last):
    ...
        ...
    OverflowError: cannot convert float infinity to integer

Testing Nan with float
    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ...
        ...
    ValueError: cannot convert float NaN to integer
